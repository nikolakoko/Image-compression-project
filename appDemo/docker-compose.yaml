services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: image-compressor-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin_user -d image_compressor"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Flask Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: image-compressor-backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT}
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: image-compressor-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge